"0",""
"0","set.seed(123)"
"0","#values eligble to be in traing set...those that have an income and variable we want to use in the model"
"0","train <- census_dat[! is.na(census_dat$Median_HHIncome), ] %>% "
"0","  select(Median_HHIncome, White_Perc, Black_Perc, Bachelors_Perc, Masters_Perc, InLaborForce_Perc, Employed_Perc, TotalPop_Perc)"
"0",""
"0","inTrain <- createDataPartition(y = train$Median_HHIncome, "
"0","                               p = 0.8, list = FALSE)"
"0",""
"0","# subset power_plant data to training"
"0","training <- train[inTrain,]"
"0",""
"0","# subset the rest to test "
"0","testing <- train[-inTrain,]"
"0",""
"0","my.lm2 <- train(training[,2:8], training[,1],"
"0","               method = ""lm"","
"0","               preProc = c(""center"", ""scale"")"
"0","              )"
"0",""
"0","#create a function to determin avg mape"
"0","mape_fun <- function(y_actual, y_pred){"
"0","  return(mean(abs(y_actual - y_pred) / y_actual))"
"0","}"
"0",""
"0","#Predict on the test set"
"0",""
"0","pred <- predict(my.lm2, testing[, 2:8])"
"0",""
"0","mod_assessment.fun(training, testing, training$Median_HHIncome, testing$Median_HHIncome, my.lm2, pred)"
"2","R_squared on the test data:
"
"1","[1]"
"1"," 0.53"
"1","
"
"2","Root mean square error on the test data: 
"
"1","[1]"
"1"," 25910.64"
"1","
"
"2","Mean Absolute Percent Error on the test data (MAPE):
"
"1","[1]"
"1"," 0.3221048"
"1","
"
